class Solution:
    def isSubtree(self, root: Optional[TreeNode], subRoot: Optional[TreeNode]) -> bool:
      if not root:
        return False

      if self.isSubtree(root, subRoot):
        return True

      return self.isSametree(root.left, subRoot) or self.isSametree(root.right, subRoot)

    def isSametree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
      if not p and not q:
        return True
      if not p or not q:
        return False

      return p.val == q.val and self.isSametree(p.left, q.left) and self.isSametree(p.right, q.right)
